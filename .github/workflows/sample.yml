# This is a basic workflow to help you get started with Actions

name: CI

on:
  workflow_call:
    inputs:
          name:
            description: 'Name to say hello too'
            required: false
            type: string
            default: 'world'
    
          checkout_commit:
            description: Commit ID you want to checkout
            type: string
            required: true
            
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.checkout_commit }}

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, ${{ inputs.name }}!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          ls
          echo "-------------------"
          #echo "ENVARS"
          env
          echo "-------------------"
          #echo "EVENT"
          #echo "${{ toJson(github.event) }}"
          echo "-------------------"
          echo "CURRENT BRANCH"
          pull_request_url=$(jq -r ".issue.pull_request.url" "$GITHUB_EVENT_PATH")
          source=$(curl -s -H "Authorization: Bearer ${{ github.token }}" \
            --retry 3 \
            "$pull_request_url" \
            | jq '.head.ref')
          echo "$source"
          #echo "-------------------"
          #echo "Old target code"
          #echo "origin/${GITHUB_BASE_REF}"
          echo "-------------------"
          echo "PR DETAILS"
          pull_request_url=$(jq -r ".issue.pull_request.url" "$GITHUB_EVENT_PATH")
          pr_json=$(curl -s -H "Authorization: Bearer ${{ github.token }}" \
            --retry 3 \
            "$pull_request_url" \
            )
          echo "$pr_json"
          echo "-------------------"
          echo "Target:"
          pull_request_url=$(jq -r ".issue.pull_request.url" "$GITHUB_EVENT_PATH")
          target=$(curl -s -H "Authorization: Bearer ${{ github.token }}" \
            --retry 3 \
            "$pull_request_url" \
            | jq '.base.ref')
          echo "$target"
          
