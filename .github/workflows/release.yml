name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    container:
      image: icr.io/goldeneye_images/goldeneye-ci-image:stable
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Import GPG key
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.RELEASE_PRIVATE_PGP }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Install dependencies
        run: npm install semantic-release @semantic-release/changelog @semantic-release/exec @semantic-release/git @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/github

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release --no-ci

      - id: versionNumber
        run: |
          echo "version=$SEMVER_VERSION"
          echo "version=$SEMVER_VERSION" >> "$GITHUB_OUTPUT"
          echo "sha=$TAG_SHA"
          echo "sha=$TAG_SHA" >> "$GITHUB_OUTPUT"

      - name: Sign Tag
        env:
          SEMVER_VERSION: ${{steps.versionNumber.outputs.version}}
          TAG_SHA: ${{steps.versionNumber.outputs.sha}}
        run: |
          if [ -z "$SEMVER_VERSION" ]
          then
            echo "No Release Version Set. Skip tagging"
          else
            echo "Version: v${SEMVER_VERSION}"
               # Remove the existing tag created by semantic-release
            git tag -d "v${SEMVER_VERSION}"
            git push origin :refs/tags/v${SEMVER_VERSION}
          
            git tag "v${SEMVER_VERSION}" "${TAG_SHA}" -f -s -m "Sign Tag"
            export GIT_COMMITTER_DATE="$(git log -1 --format=%aD v${SEMVER_VERSION})"
            git push origin "v${SEMVER_VERSION}" -f
          fi

#        run: |
#          npx semantic-release --no-ci
#
#
#              - id: versionNumber
#        run: |
#          echo "version=$SEMVER_VERSION"
#          echo "version=$SEMVER_VERSION" >> "$GITHUB_OUTPUT"
#
#          echo "Tags sha: ${TAG_SHA}"
#          echo "version: v${SEMVER_VERSION}"
#          # Remove the existing tag created by semantic-release
#          git tag -d "v${SEMVER_VERSION}"
#          git push origin :refs/tags/v${SEMVER_VERSION}
#
#          git tag "v${SEMVER_VERSION}" ${TAG_SHA} -s -m "Sign Tag"
#          export GIT_COMMITTER_DATE="$(git log -1 --format=%aD \"v${SEMVER_VERSION}\")"
#          git push origin "v${SEMVER_VERSION}"
#
#
